name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Test and build frontend
  frontend-test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend linting
        run: |
          cd frontend
          npm run lint

      - name: Run frontend type checking
        run: |
          cd frontend
          npm run type-check

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/
          retention-days: 1

  # Test smart contracts
  contracts-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "contracts/package-lock.json"

      - name: Install contract dependencies
        run: |
          cd contracts
          npm ci

      - name: Compile contracts
        run: |
          cd contracts
          npm run compile

      - name: Run contract tests
        run: |
          cd contracts
          npm run test

  # Deploy to Vercel (only on push to main)
  deploy-vercel:
    runs-on: ubuntu-latest
    needs: [frontend-test-build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: Production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "Starting Vercel deployment..."
          echo "Vercel ORG ID: ${VERCEL_ORG_ID:0:8}..." 
          echo "Vercel Project ID: ${VERCEL_PROJECT_ID:0:8}..."

          vercel --prod --confirm \
            --token $VERCEL_TOKEN \
            --meta githubCommitSha=${{ github.sha }} \
            --meta githubCommitAuthorName="${{ github.actor }}" \
            --meta githubCommitAuthorLogin="${{ github.actor }}" \
            --meta githubDeployment=1 \
            --meta githubOrg="${{ github.repository_owner }}" \
            --meta githubRepo="${{ github.event.repository.name }}" \
            --meta githubCommitOrg="${{ github.repository_owner }}" \
            --meta githubCommitRepo="${{ github.event.repository.name }}" \
            --meta githubCommitMessage="${{ github.event.head_commit.message }}" \
            --meta githubCommitRef="${{ github.ref_name }}" || {
              echo "Vercel deployment failed with exit code $?"
              echo "Checking Vercel project status..."
              vercel ls --token $VERCEL_TOKEN || true
              exit 1
            }
